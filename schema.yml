openapi: 3.0.3
info:
  title: AtruX API
  version: '0.1'
  description: The AtruX API documentation
paths:
  /api/v0.1/auth/token/login/:
    post:
      operationId: api_v0.1_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/v0.1/auth/token/logout/:
    post:
      operationId: api_v0.1_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v0.1/auth/users/:
    get:
      operationId: api_v0.1_auth_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCreateSerializerr'
          description: ''
    post:
      operationId: api_v0.1_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
  /api/v0.1/auth/users/{id}/:
    get:
      operationId: api_v0.1_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateSerializerr'
          description: ''
    put:
      operationId: api_v0.1_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateSerializerr'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateSerializerr'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateSerializerr'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateSerializerr'
          description: ''
    patch:
      operationId: api_v0.1_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserCreateSerializerr'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserCreateSerializerr'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserCreateSerializerr'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateSerializerr'
          description: ''
    delete:
      operationId: api_v0.1_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v0.1/auth/users/activation/:
    post:
      operationId: api_v0.1_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v0.1/auth/users/me/:
    get:
      operationId: api_v0.1_auth_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateSerializerr'
          description: ''
    put:
      operationId: api_v0.1_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateSerializerr'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateSerializerr'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateSerializerr'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateSerializerr'
          description: ''
    patch:
      operationId: api_v0.1_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserCreateSerializerr'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserCreateSerializerr'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserCreateSerializerr'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateSerializerr'
          description: ''
    delete:
      operationId: api_v0.1_auth_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v0.1/auth/users/resend_activation/:
    post:
      operationId: api_v0.1_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v0.1/auth/users/reset_email/:
    post:
      operationId: api_v0.1_auth_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v0.1/auth/users/reset_email_confirm/:
    post:
      operationId: api_v0.1_auth_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v0.1/auth/users/reset_password/:
    post:
      operationId: api_v0.1_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v0.1/auth/users/reset_password_confirm/:
    post:
      operationId: api_v0.1_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/v0.1/auth/users/set_email/:
    post:
      operationId: api_v0.1_auth_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v0.1/auth/users/set_password/:
    post:
      operationId: api_v0.1_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordRetype'
          description: ''
  /api/v0.1/drivers/:
    get:
      operationId: api_v0.1_drivers_list
      summary: Retrieve a specific driver by ID
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v0.1/drivers/{id}:
    get:
      operationId: api_v0.1_drivers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v0.1/personal-documents/:
    get:
      operationId: api_v0.1_personal_documents_list
      description: Fetch documents for the authenticated user. You can optionally
        filter by document category.
      summary: List user documents
      parameters:
      - in: query
        name: category
        schema:
          type: string
        description: Optional category filter for the user's documents.
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: ''
    post:
      operationId: api_v0.1_personal_documents_create
      description: Allows an authenticated user to upload a document. Automatically
        assigns the document to the user.
      summary: Upload a new document
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: api_v0.1_personal_documents_partial_update
      description: Allows the owner of a document to update its details or file.
      summary: Update a document
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v0.1_personal_documents_destroy
      description: Deletes the document if it belongs to the current authenticated
        user.
      summary: Delete a user document
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          description: Document deleted
        '403':
          description: You are not the owner of this document
        '404':
          description: Document not found
  /api/v0.1/personal-documents/{category}/:
    get:
      operationId: api_v0.1_personal_documents_list_2
      description: Fetch documents for the authenticated user. You can optionally
        filter by document category.
      summary: List user documents
      parameters:
      - in: path
        name: category
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      - in: query
        name: category
        schema:
          type: string
        description: Optional category filter for the user's documents.
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: ''
    post:
      operationId: api_v0.1_personal_documents_create_2
      description: Allows an authenticated user to upload a document. Automatically
        assigns the document to the user.
      summary: Upload a new document
      parameters:
      - in: path
        name: category
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: api_v0.1_personal_documents_partial_update_2
      description: Allows the owner of a document to update its details or file.
      summary: Update a document
      parameters:
      - in: path
        name: category
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v0.1_personal_documents_destroy_2
      description: Deletes the document if it belongs to the current authenticated
        user.
      summary: Delete a user document
      parameters:
      - in: path
        name: category
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          description: Document deleted
        '403':
          description: You are not the owner of this document
        '404':
          description: Document not found
  /api/v0.1/personal-documents/{id}:
    get:
      operationId: api_v0.1_personal_documents_list_3
      description: Fetch documents for the authenticated user. You can optionally
        filter by document category.
      summary: List user documents
      parameters:
      - in: query
        name: category
        schema:
          type: string
        description: Optional category filter for the user's documents.
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: ''
    post:
      operationId: api_v0.1_personal_documents_create_3
      description: Allows an authenticated user to upload a document. Automatically
        assigns the document to the user.
      summary: Upload a new document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: api_v0.1_personal_documents_partial_update_3
      description: Allows the owner of a document to update its details or file.
      summary: Update a document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v0.1_personal_documents_destroy_3
      description: Deletes the document if it belongs to the current authenticated
        user.
      summary: Delete a user document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          description: Document deleted
        '403':
          description: You are not the owner of this document
        '404':
          description: Document not found
  /api/v0.1/profile/:
    get:
      operationId: api_v0.1_profile_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v0.1/rating/{id}:
    patch:
      operationId: api_v0.1_rating_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v0.1/status/:
    patch:
      operationId: api_v0.1_status_partial_update
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v0.1/trailer-documents/{id}:
    get:
      operationId: api_v0.1_trailer_documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v0.1_trailer_documents_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v0.1_trailer_documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v0.1_trailer_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v0.1/trailers/:
    get:
      operationId: api_v0.1_trailers_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v0.1_trailers_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v0.1/trailers/{id}:
    get:
      operationId: api_v0.1_trailers_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v0.1_trailers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v0.1_trailers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v0.1/truck-documents/{id}:
    get:
      operationId: api_v0.1_truck_documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v0.1_truck_documents_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v0.1_truck_documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v0.1_truck_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v0.1/trucks/:
    get:
      operationId: api_v0.1_trucks_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v0.1_trucks_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v0.1/trucks/{id}:
    get:
      operationId: api_v0.1_trucks_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v0.1_trucks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v0.1_trucks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Dispatcher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
      required:
      - id
      - user
    Document:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 100
        document:
          type: string
          format: uri
          nullable: true
        category:
          type: string
          nullable: true
          maxLength: 100
        user:
          type: integer
      required:
      - id
      - user
    Driver:
      type: object
      properties:
        average_rating:
          type: string
          readOnly: true
        on_road:
          type: boolean
      required:
      - average_rating
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PatchedDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 100
        document:
          type: string
          format: uri
          nullable: true
        category:
          type: string
          nullable: true
          maxLength: 100
        user:
          type: integer
    PatchedUserCreateSerializerr:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 100
        company:
          type: string
          nullable: true
        password:
          type: string
          writeOnly: true
        is_dispatcher:
          type: boolean
        is_driver:
          type: boolean
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPasswordRetype:
      type: object
      properties:
        new_password:
          type: string
        re_new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
      - re_new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 255
      required:
      - current_password
      - new_email
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver:
          $ref: '#/components/schemas/Driver'
        dispatcher:
          $ref: '#/components/schemas/Dispatcher'
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
        is_admin:
          type: boolean
        is_dispatcher:
          type: boolean
        is_driver:
          type: boolean
        company:
          type: string
      required:
      - company
      - dispatcher
      - driver
      - email
      - id
      - name
      - password
    UserCreatePasswordRetype:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        company:
          type: string
        is_dispatcher:
          type: boolean
        is_driver:
          type: boolean
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        re_password:
          type: string
      required:
      - company
      - email
      - id
      - name
      - password
      - re_password
    UserCreateSerializerr:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 100
        company:
          type: string
          nullable: true
        password:
          type: string
          writeOnly: true
        is_dispatcher:
          type: boolean
        is_driver:
          type: boolean
      required:
      - email
      - id
      - name
      - password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 255
      required:
      - new_email
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
